{"version":3,"sources":["webpack:///./src/components/HeroSlide/HeroSlide.js","webpack:///./src/components/FeaturedProducts/FeaturedProducts.js","webpack:///./src/pages/index.js"],"names":["className","to","src","alt","data","listData","splice","map","item","key","id","slug","icon","title","shortDescription","location","productList","allMarkdownRemark","edges","themeList","filter","node","frontmatter","category","toUpperCase","fields","pluginList","Layout","metaTags","pageUrl","href","path","mdiChevronRight","color","size"],"mappings":"y73CAIe,G,UAAA,kBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qBACb,6BACE,yBAAKA,UAAU,gBAAf,UACA,yBAAKA,UAAU,eAAf,6BAGA,yBAAKA,UAAU,kBAAf,sEAGA,kBAAC,OAAD,CAAMC,GAAG,mBAAmBD,UAAU,aAAtC,kBAON,yBAAKA,UAAU,YACb,yBAAKA,UAAU,gBACb,yBAAKE,IAAI,uEAAuEC,IAAI,GAAGH,UAAU,eACjG,yBAAKE,IAAI,uEAAuEC,IAAI,GAAGH,UAAU,eACjG,yBAAKE,IAAI,uEAAuEC,IAAI,GAAGH,UAAU,sBCzB9F,G,UAAA,YAAmB,IAC1BI,EADyB,EAAfC,SACMC,OAAO,EAAG,GAEhC,OACE,yBAAKN,UAAU,qBACb,yBAAKA,UAAU,OAEXI,EAAKG,KAAI,SAAAC,GAAI,OACX,yBAAKR,UAAU,8BAA8BS,IAAKD,EAAKE,IACrD,yBAAKV,UAAU,aACb,kBAAC,OAAD,CAAMC,GAAE,IAAOO,EAAKG,MAClB,yBAAKT,IAAMM,EAAKI,KAAOT,IAAI,OAG/B,yBAAKH,UAAU,4BACb,kBAAC,OAAD,CAAMC,GAAE,IAAOO,EAAKG,MAChBH,EAAKK,OAET,yBAAKb,UAAU,mDACXQ,EAAKM,2BCfV,sBAAmB,IAAhBC,EAAe,EAAfA,SAsCDC,EApCL,OAoC0BC,kBAA5BC,MACFC,EAAYH,EACfI,QAAO,YAGN,MAAkC,UAHd,EAAXC,KACiBC,YAAlBC,SAEQC,iBACfjB,KAAI,SAAAC,GAAI,wBAASA,EAAKa,KAAKC,YAAnB,CAAgCZ,GAAIF,EAAKa,KAAKX,GAAIC,KAAMH,EAAKa,KAAKI,OAAOd,UAEhFe,EAAaV,EAChBI,QAAO,YAGN,MAAkC,WAHd,EAAXC,KACiBC,YAAlBC,SAEQC,iBACfjB,KAAI,SAAAC,GAAI,wBAASA,EAAKa,KAAKC,YAAnB,CAAgCZ,GAAIF,EAAKa,KAAKX,GAAIC,KAAMH,EAAKa,KAAKI,OAAOd,UAEtF,OACE,kBAACgB,EAAA,EAAD,CACEC,SAAU,CACRC,QAASd,EAASe,OAGpB,yBAAK9B,UAAU,sBACb,kBAAC,EAAD,OAGF,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBAAf,UAGA,kBAAC,OAAD,CAAMC,GAAG,qBAAT,aAEE,kBAAC,IAAD,CAAM8B,KAAOC,IAAkBC,MAAM,UAAUC,KAAK,WAGxD,kBAAC,EAAD,CAAkB7B,SAAUc,KAG9B,yBAAKnB,UAAU,6BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBAAf,WAGA,kBAAC,OAAD,CAAMC,GAAG,sBAAT,cAEE,kBAAC,IAAD,CAAM8B,KAAOC,IAAkBC,MAAM,UAAUC,KAAK,WAGxD,kBAAC,EAAD,CAAkB7B,SAAUqB","file":"component---src-pages-index-js-eb741d3493fbabb821c7.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport './HeroSlide.scss';\n\nexport default () => (\n  <div className=\"hero-slide\">\n    <div className=\"slide-item\">\n      <div className=\"row\">\n        <div className=\"col-md-7\">\n          <div className=\"slide-description\">\n            <div>\n              <div className=\"label-latest\">Latest</div>\n              <div className=\"slide-title\">\n                Twitter UI for Ionic Apps\n              </div>\n              <div className=\"slide-subtitle\">\n                I've had the most fun (and challenges) working on this Ionic Theme\n              </div>\n              <Link to=\"/theme/twitter-5\" className=\"slide-cta\">\n                Take a look\n              </Link>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-5\">\n          <div className=\"slide-images\">\n            <img src=\"/images/export/d04d11c8cd6656635dea0dd2aeeac5079a4b1057-828x1792.jpg\" alt=\"\" className=\"image-item\"/>\n            <img src=\"/images/export/e37cae1bb7a93d36ef61bde9d8560abd7230e264-828x1792.jpg\" alt=\"\" className=\"image-item\" />\n            <img src=\"/images/export/fb2feac5e821806a1ef37637cb03a44e4b96e59a-828x1792.jpg\" alt=\"\" className=\"image-item\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './FeaturedProducts.scss';\n\nexport default ({ listData }) => {\n  const data = listData.splice(0, 4);\n\n  return (\n    <div className=\"featured-products\">\n      <div className=\"row\">\n        {\n          data.map(item => (\n            <div className=\"product-item col-md-3 col-6\" key={item.id}>\n              <div className=\"item-icon\">\n                <Link to={ `/${item.slug}` }>\n                  <img src={ item.icon } alt=\"\"/>\n                </Link>\n              </div>\n              <div className=\"item-title text-ellipsis\">\n                <Link to={ `/${item.slug}` }>\n                  { item.title }\n                </Link>\n                <div className=\"item-short-description text-muted text-ellipsis\">\n                  { item.shortDescription }\n                </div>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport Icon from '@mdi/react';\nimport { mdiChevronRight } from '@mdi/js';\nimport Layout from '../components/Layout';\nimport HeroSlide from '../components/HeroSlide/HeroSlide';\nimport FeaturedProducts from '../components/FeaturedProducts/FeaturedProducts';\n\nexport default ({ location }) => {\n\n  const data = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(sort: { fields: [frontmatter___createdAt], order: DESC }) {\n          totalCount\n          edges {\n            node {\n              id\n              frontmatter {\n                title\n                shortDescription\n                price\n                createdAt(formatString: \"DD MMMM, YYYY\")\n                category\n                icon\n                tags\n                framework\n                marketUrl\n                gumroadUrl\n                sellfyUrl\n                paypalUrl\n                color\n                thumbnails\n                smallThumbnails\n              }\n              fields {\n                slug\n              }\n              excerpt\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const { edges: productList } = data.allMarkdownRemark;\n  const themeList = productList\n    .filter(({ node }) => {\n      const { category } = node.frontmatter;\n\n      return category.toUpperCase() === 'THEME';\n    }).map(item => ({...item.node.frontmatter, id: item.node.id, slug: item.node.fields.slug}));\n\n  const pluginList = productList\n    .filter(({ node }) => {\n      const { category } = node.frontmatter;\n\n      return category.toUpperCase() === 'PLUGIN';\n    }).map(item => ({...item.node.frontmatter, id: item.node.id, slug: item.node.fields.slug}));\n\n  return (\n    <Layout\n      metaTags={{\n        pageUrl: location.href,\n      }}\n    >\n      <div className=\"hero-slide-wrapper\">\n        <HeroSlide />\n      </div>\n\n      <div className=\"featured-products-wrapper\">\n        <div className=\"featured-header\">\n          <div className=\"feature-title\">\n            Themes\n          </div>\n          <Link to=\"/products?q=Theme\">\n            All Themes\n            <Icon path={ mdiChevronRight } color=\"#007bff\" size=\"20px\" />\n          </Link>\n        </div>\n        <FeaturedProducts listData={themeList}/>\n      </div>\n\n      <div className=\"featured-products-wrapper\">\n        <div className=\"featured-header\">\n          <div className=\"feature-title\">\n            Plugins\n          </div>\n          <Link to=\"/products?q=Plugin\">\n            All Plugins\n            <Icon path={ mdiChevronRight } color=\"#007bff\" size=\"20px\" />\n          </Link>\n        </div>\n        <FeaturedProducts listData={pluginList}/>\n      </div>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}